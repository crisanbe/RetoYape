object Testing {
    private const val junitVersion = "4.13.2"
    private const val junitAndroidExtVersion = "1.1.5"
    private const val robolectricVersion = "4.9.2"
    private const val coroutinesTestVersion = "1.6.0"
    private const val truthVersion = "1.1.3"
    private const val mockkVersion = "1.12.4"
    private const val turbineVersion = "0.7.0"
    private const val mockWebServerVersion = "4.9.3"
    private const val mockitoKotlinVersion = "4.2.0"
    private const val testRunnerVersion = "1.4.0"
    private const val testRulesVersion = "1.5.0"
    private const val testEspressoWebVersion = "3.5.0"
    private const val testCoreVersion = "1.5.0"
    private const val uiTestJunit4Version = "1.3.1"
    private const val uiTestManifestVersion = "1.3.1"
    private const val coreLibraryVersion = "1.1.5"
    private const val dexmakerMockitoVersion = "2.28.3"
    private const val instantTaskExecutorRuleVersion = "2.1.0"
    private const val testArchCoreTestingVersion = "2.2.0"
    private const val testHamcrestVersion = "2.2"
    private const val testExtJunitKtxVersion = "1.1.5"
    private const val testCoreKtxVersion = "1.5.0"
    private const val testMockitoCoreVersion = "5.1.1"
    private const val testCorutinesCoreVersion = "1.6.4"
    private const val testDaggerHiltRobolectricVersion = "2.44"
    private const val testRobolectricDaggerHiltCompileVersion = "2.44"

    private const val jacocoVersion = "0.8.8"
    private const val sonarVersion = "3.5.0.2730"
    private const val dependencyCheckVersion = "8.1.2"
    const val koverVersion = "0.6.1"

    const val junit4 = "junit:junit:$junitVersion"
    const val junitAndroidExt = "androidx.test.ext:junit-ktx:$junitAndroidExtVersion"
    const val robolectricTest = "org.robolectric:robolectric:$robolectricVersion"
    const val daggerHiltRobolectricTest = "com.google.dagger:hilt-android-testing:$testDaggerHiltRobolectricVersion"
    const val robolectricDaggerHiltCompileTest = "com.google.dagger:hilt-android-compiler:$testRobolectricDaggerHiltCompileVersion"
    const val testMockitoOnlineVersion = "org.mockito:mockito-inline:$testMockitoCoreVersion"
    const val mockitoKotlin = "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    const val coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"
    const val truth = "com.google.truth:truth:$truthVersion"
    const val truthTest = "androidx.test.ext:truth:$truthVersion"
    const val mockk = "io.mockk:mockk:$mockkVersion"
    const val mockkAndroid = "io.mockk:mockk-android:$mockkVersion"
    const val mockito = "org.mockito:mockito-core:$testMockitoCoreVersion"
    const val turbine = "app.cash.turbine:turbine:$turbineVersion"
    const val mockWebServer = "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"
    const val hiltTesting = "com.google.dagger:hilt-android-testing:${DaggerHilt.hiltVersion}"
    const val uiTestJunit4 = "androidx.compose.ui:ui-test-junit4:$uiTestJunit4Version"
    const val uiTestManifest = "androidx.compose.ui:ui-test-manifest:$uiTestManifestVersion"
    const val testRunner = "androidx.test:runner:$testRunnerVersion"
    const val testRules = "androidx.test:rules:$testRulesVersion"
    const val testCore = "androidx.test:core:$testCoreVersion"
    const val testCorutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$testCorutinesCoreVersion"
    const val testArchCoreTesting = "androidx.arch.core:core-testing:$testArchCoreTestingVersion"
    const val testHamcrest = "org.hamcrest:hamcrest:$testHamcrestVersion"
    const val testExtJunitKtx = "androidx.test.ext:junit-ktx:$testExtJunitKtxVersion"
    const val testCoreKtx = "androidx.test:core-ktx:$testCoreKtxVersion"
    const val testEspressoWeb = "androidx.test.espresso:espresso-web:$testEspressoWebVersion"
    const val coreLibrary = "com.android.tools:desugar_jdk_libs:$coreLibraryVersion"
    const val dexmakerMockito = "com.linkedin.dexmaker:dexmaker-mockito:$dexmakerMockitoVersion"
    const val instantTaskExecutorRule = "androidx.arch.core:core-testing:$instantTaskExecutorRuleVersion"

    const val jacoco = "org.jacoco:org.jacoco.core:$jacocoVersion"
    const val sonarqube = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonarVersion"
    const val dependencyCheck = "org.owasp:dependency-check-gradle:$dependencyCheckVersion"
    const val kover = "org.jetbrains.kotlinx:kover:$koverVersion"
}
